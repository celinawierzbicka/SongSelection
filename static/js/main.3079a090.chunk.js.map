{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","key","title","onClick","selectSong","renderList","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"2NAIMA,E,2KACY,IAAD,OACT,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACC,GACzB,OACI,yBAAKC,UAAU,OAAOC,IAAKF,EAAKG,OAC5B,yBAAKF,UAAU,yBACX,4BAAQA,UAAU,oBAAoBG,QAAS,kBAAM,EAAKP,MAAMQ,WAAWL,KAA3E,WAEJ,yBAAKC,UAAU,WAAWD,EAAKG,a,+BAO3C,OAAO,yBAAKF,UAAU,mBAAmBL,KAAKU,kB,GAf/BC,aAyBRC,eANS,SAAAC,GACpB,MAAO,CACHX,MAAOW,EAAMX,SAImB,CAACO,WC7Bf,SAACL,GACvB,MAAO,CACHU,KAAM,gBACNC,QAASX,KD0BFQ,CAAmDb,GEHnDa,eANS,SAAAC,GACpB,MAAO,CACHT,KAAMS,EAAMG,gBAILJ,EAvBI,SAACX,GAChB,OAAIA,EAAMG,KAIN,6BACI,4CACA,qCACYH,EAAMG,KAAKG,MACnB,6BAFJ,aAGeN,EAAMG,KAAKa,WARvB,iDCcAC,EAfH,WACR,OACA,yBAAKb,UAAU,qBACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,qBACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,qBACX,kBAAC,EAAD,UCODc,cAAgB,CAC3BjB,MAlBiB,WACjB,MAAO,CACH,CAACK,MAAO,YAAaU,SAAU,QAC/B,CAACV,MAAO,WAAYU,SAAU,QAC9B,CAACV,MAAO,WAAYU,SAAU,QAC9B,CAACV,MAAO,qBAAsBU,SAAU,UAc5CD,aAVwB,WAAkC,IAAjCA,EAAgC,uDAAjB,KAAMI,EAAW,uCACzD,MAAoB,kBAAhBA,EAAON,KACAM,EAAOL,QAGXC,KCRXK,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IACzB,kBAAC,EAAD,OAEJC,SAASC,cAAc,Y","file":"static/js/main.3079a090.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectSong } from '../actions';\r\n\r\nclass SongList extends Component {\r\n    renderList() {\r\n        return this.props.songs.map((song) => {\r\n            return(\r\n                <div className=\"item\" key={song.title}>\r\n                    <div className=\"right floated content\">\r\n                        <button className=\"ui button primary\" onClick={() => this.props.selectSong(song)}>Select</button>\r\n                    </div>\r\n                    <div className=\"content\">{song.title}</div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"ui divided list\">{this.renderList()}</div>\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        songs: state.songs\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {selectSong: selectSong})(SongList);","export const selectSong = (song) => {\r\n    return {\r\n        type: \"SONG_SELECTED\",\r\n        payload: song\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SongDetail = (props) => {\r\n    if(!props.song) {\r\n        return <div>Select a song</div>\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Details for:</h3>\r\n            <p>\r\n                Title: {props.song.title}\r\n                <br />\r\n                Duration: {props.song.duration}\r\n            </p>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        song: state.selectedSong\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SongDetail);\r\n","import React from 'react';\r\nimport SongList from './SongList';\r\nimport SongDetail from './SongDetail';\r\n\r\nconst App = () => {\r\n    return (\r\n    <div className=\"ui container grid\">\r\n        <div className=\"ui row\">\r\n            <div className=\"column eight wide\">\r\n                <SongList />\r\n            </div>\r\n            <div className=\"column eight wide\">\r\n                <SongDetail />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\n\r\nconst songsReducer = () => {\r\n    return [\r\n        {title: 'No Scrubs', duration: '4:05'},\r\n        {title: 'Macarena', duration: '2:30'},\r\n        {title: 'All Star', duration: '3:15'},\r\n        {title: 'I want it that way', duration: '1:45'}\r\n    ];\r\n};\r\n\r\nconst selectedSongReducer = (selectedSong = null, action) => {\r\n    if (action.type === 'SONG_SELECTED') {\r\n        return action.payload;\r\n    }\r\n\r\n    return selectedSong;\r\n};\r\n\r\nexport default combineReducers({\r\n    songs: songsReducer,\r\n    selectedSong: selectedSongReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(reducers)}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}